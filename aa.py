import matplotlib.pyplot as plt
import numpy as np

# fig, axes = plt.subplots(nrows=1, ncols=1)

# lenet5-RS
all_data = [[0.8756]*20,
            [0.315, 0.7638, 0.3563, 0.4758, 0.4146, 0.4504, 0.2489, 0.201, 0.5474, 0.6272, 0.5815, 0.3381, 0.2638, 0.4565, 0.4504, 0.6938, 0.5452, 0.2693, 0.4609, 0.4504],
            [0.9163]*20,
            [0.62, 0.5964, 0.3254, 0.5496, 0.5606, 0.5815, 0.5639, 0.4306, 0.337, 0.7263, 0.7159, 0.641, 0.4097, 0.7786, 0.6002, 0.815, 0.6971, 0.4339, 0.3811, 0.8007],
            [0.9637]*20,
            [0.8271, 0.7324, 0.4906, 0.7792, 0.8722, 0.6938, 0.8414, 0.7219, 0.7836, 0.8425, 0.6619, 0.6916, 0.821, 0.9488, 0.8486, 0.8634, 0.8684, 0.8524, 0.793, 0.5193],
            [0.9967]*20,
            [0.9901, 0.9956, 0.9703, 0.9912, 0.9857, 0.9901, 0.9912, 0.9978, 0.9912, 0.94, 0.9857, 0.9901, 0.9956, 0.9146, 0.9961, 0.9912, 0.8811, 0.9146, 0.9956, 0.9961]]

# mnist-RS
# all_data = [[0.8051]*20,
#             [0.1186, 0.0654, 0.4719, 0.8051, 0.0758, 0.14, 0.1955, 0.2059, 0.1764, 0.1949, 0.3193, 0.1828, 0.0191, 0.0839, 0.037, 0.037, 0.8051, 0.1776, 0.2713, 0.3117],
#             [0.9109]*20,
#             [0.7825, 0.3956, 0.7981, 0.4991, 0.7692, 0.6108, 0.7392, 0.6877, 0.3013, 0.7935, 0.3626, 0.8519, 0.7756, 0.8236, 0.8953, 0.819, 0.8548, 0.6929, 0.5674, 0.4222],
#             [0.9925]*20,
#             [0.9682, 0.52, 0.9393, 0.9063, 0.9306, 0.904, 0.9219, 0.9375, 0.9242, 0.9503, 0.4558, 0.7328, 0.9566, 0.583, 0.8936, 0.8381, 0.7432, 0.4922, 0.9549, 0.8664],
#             [0.9925]*20,
#             [0.9682, 0.52, 0.9393, 0.9063, 0.9306, 0.904, 0.9219, 0.9375, 0.9242, 0.9503, 0.4558, 0.7328, 0.9566, 0.583, 0.8936, 0.8381, 0.7432, 0.4922, 0.9549, 0.8664]]

# cifar10-RS
# all_data = [[0.8128]*20,
#             [0.6747, 0.3639, 0.4953, 0.7715, 0.7001, 0.6942, 0.3385, 0.6088, 0.6318, 0.3627, 0.7715, 0.734, 0.5074, 0.679, 0.7063, 0.7707, 0.6739, 0.7063, 0.5347, 0.4126],
#             [0.9189]*20,
#             [0.8947, 0.7613, 0.7902, 0.4271, 0.6104, 0.8795, 0.7555, 0.6899, 0.4692, 0.7387, 0.8732, 0.8112, 0.4692, 0.7383, 0.4532, 0.5605, 0.8608, 0.4555, 0.3978, 0.796],
#             [0.9544]*20,
#             [0.9415, 0.7477, 0.8783, 0.8779, 0.8721, 0.8136, 0.8171, 0.8588, 0.8124, 0.8651, 0.869, 0.8405, 0.9434, 0.8456, 0.9119, 0.7672, 0.9119, 0.8588, 0.9025, 0.4848],
#             [0.9902]*20,
#             [0.8545, 0.9033, 0.908, 0.9715, 0.92, 0.8881, 0.9419, 0.8947, 0.9271, 0.8686, 0.9056, 0.8888, 0.922, 0.9477, 0.9438, 0.9579, 0.945, 0.8966, 0.7672, 0.9216]]

# svhn-RS
# all_data = [[0.8535]*20,
#             [0.6535, 0.6807, 0.8285, 0.8062, 0.7769, 0.4926, 0.4519, 0.8097, 0.4549, 0.8062, 0.6697, 0.4808, 0.4007, 0.4593, 0.5293, 0.3841, 0.4926, 0.4549, 0.4698, 0.4226],
#             [0.9112]*20,
#             [0.8373, 0.6662, 0.8723, 0.8605, 0.4886, 0.7091, 0.8119, 0.6977, 0.8552, 0.5166, 0.7848, 0.864, 0.528, 0.4886, 0.7069, 0.8552, 0.5962, 0.8268, 0.5411, 0.7091],
#             [0.9549]*20,
#             [0.7244, 0.8753, 0.9291, 0.6951, 0.885, 0.5516, 0.8609, 0.6413, 0.9549, 0.8679, 0.7371, 0.8605, 0.5809, 0.8556, 0.8504, 0.5241, 0.9274, 0.5914, 0.8228, 0.8145],
#             [0.9926]*20,
#             [0.9409, 0.9869, 0.9335, 0.9462, 0.972, 0.9414, 0.9357, 0.9383, 0.8749, 0.9182, 0.9164, 0.9256, 0.9484, 0.9396, 0.9576, 0.9221, 0.8688, 0.9108, 0.9738, 0.9567]]

# lenet5-QS
# all_data = [[17.89]*20,
#             [25.2, 26.02, 30.08, 23.58, 19.51, 17.89, 30.89, 34.96, 17.89, 34.15, 28.46, 24.39, 30.08, 24.39, 27.64, 26.83, 28.46, 30.08, 20.33, 26.83],
#             [8.94]*20,
#             [20.33, 17.89, 17.07, 12.2, 18.7, 17.07, 18.7, 17.89, 16.26, 14.63, 18.7, 18.7, 17.89, 26.02, 20.33, 13.82, 22.76, 13.82, 23.58, 17.89],
#             [3.25]*20,
#             [12.2, 5.69, 12.2, 17.89, 8.13, 7.32, 8.94, 10.57, 13.01, 8.94, 8.94, 10.57, 8.13, 9.76, 11.38, 13.01, 6.5, 13.01, 9.76, 11.38],
#             [0.00]*20,
#             [4.88, 4.07, 3.25, 10.57, 7.32, 6.5, 4.07, 0.0, 9.76, 3.25, 6.5, 3.25, 7.32, 8.13, 4.88, 6.5, 10.57, 3.25, 6.5, 4.88]]

# mnist-QS
# all_data = [[18.49]*20,
#             [24.37, 21.01, 29.41, 24.37, 40.34, 21.85, 24.37, 42.86, 25.21, 40.34, 38.66, 21.85, 22.69, 35.29, 35.29, 23.53, 25.21, 26.89, 42.86, 31.09],
#             [6.72]*20,
#             [16.81, 20.17, 29.41, 22.69, 23.53, 11.76, 12.61, 11.76, 11.76, 10.92, 13.45, 18.49, 17.65, 24.37, 7.56, 24.37, 16.81, 23.53, 8.4, 15.97],
#             [2.52]*20,
#             [2.52, 13.45, 13.45, 7.56, 11.76, 18.49, 19.33, 6.72, 16.81, 24.37, 19.33, 19.33, 17.65, 7.56, 10.08, 7.56, 11.76, 21.01, 12.61, 11.76],
#             [0.00]*20,
#             [2.52, 5.88, 4.2, 3.36, 10.92, 1.68, 6.72, 0.0, 5.88, 2.52, 4.2, 5.88, 2.52, 1.68, 0.84, 1.68, 4.2, 0.0, 0.0, 4.2]]

# cifar10-QS
# all_data = [[9.68]*20,
#             [11.83, 37.63, 35.48, 25.81, 16.13, 44.09, 38.71, 32.26, 36.56, 22.58, 27.96, 37.63, 64.52, 22.58, 38.71, 37.63, 22.58, 37.63, 36.56, 43.01],
#             [9.68]*20,
#             [11.83, 37.63, 35.48, 25.81, 16.13, 44.09, 38.71, 32.26, 36.56, 22.58, 27.96, 37.63, 64.52, 22.58, 38.71, 37.63, 22.58, 37.63, 36.56, 43.01],
#             [4.30]*20,
#             [15.05, 11.83, 20.43, 15.05, 26.88, 26.88, 7.53, 20.43, 5.38, 32.26, 34.41, 33.33, 17.2, 34.41, 6.45, 18.28, 9.68, 6.45, 1.08, 25.81],
#             [0.00]*20,
#             [24.73, 6.45, 13.98, 20.43, 1.08, 1.08, 12.9, 13.98, 20.43, 26.88, 24.73, 7.53, 11.83, 1.08, 10.75, 6.45, 3.23, 8.6, 16.13, 15.05]]

# svhn-QS
# all_data = [[14.74]*20,
#             [48.42, 36.84, 20.0, 37.89, 23.16, 45.26, 22.11, 20.0, 47.37, 23.16, 48.42, 50.53, 32.63, 47.37, 24.21, 62.11, 50.53, 36.84, 35.79, 48.42],
#             [4.21]*20,
#             [18.95, 47.37, 33.68, 55.79, 22.11, 8.42, 25.26, 22.11, 10.53, 32.63, 21.05, 33.68, 23.16, 44.21, 46.32, 32.63, 34.74, 32.63, 38.95, 22.11],
#             [4.21]*20,
#             [18.95, 47.37, 33.68, 55.79, 22.11, 8.42, 25.26, 22.11, 10.53, 32.63, 21.05, 33.68, 23.16, 44.21, 46.32, 32.63, 34.74, 32.63, 38.95, 22.11],
#             [0.00]*20,
#             [5.26, 5.26, 4.21, 0.0, 5.26, 5.26, 14.74, 0.0, 13.68, 0.0, 7.37, 1.05, 7.37, 4.21, 1.05, 0.0, 7.37, 1.05, 9.47, 6.32]]
plt.boxplot(all_data)
# plot box plot
# axes.set_title('Box plot')

plt.grid(b=True, axis='y') #只显示x轴网格线
# plt.xticks([y + 1 for y in range(len(all_data))], rotation=60)
plt.ylabel('Mutation score')
plt.xlabel(['RS-MS>0.8', 'RND-MS>0.8', 'RS-MS>0.9', 'RND-MS>0.9', 'RS-MS>0.95', 'RND-MS>0.95', 'RS-MS>0.99', 'RND-MS>0.99'], rotation=60)
# add x-tick labels
# plt.setp(axes, xticks=[y + 1 for y in range(len(all_data))],
#          # xticklabels=['RS-1', 'RND-1', 'RS-2', 'RND-2', 'RS-3', 'RND-3', 'RS-4', 'RND-4']
#          xticklabels=['RS-MS>0.8', 'RND-MS>0.8', 'RS-MS>0.9', 'RND-MS>0.9', 'RS-MS>0.95', 'RND-MS>0.95', 'RS-MS>0.99', 'RND-MS>0.99'])
plt.show()

plt.savefig('./Model_A_RS_box.eps')